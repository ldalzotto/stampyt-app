swagger: "2.0"
info:
  description: ""
  version: "1.0.0"
  title: "Swagger stampyt-app"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "loic.dalzotto@hotmail.fr"
basePath: "/api/v1"
tags:
- name: "Car"
  description: "Everything about Car management."
- name: "Garage"
  description: "Everything about Garage management."
schemes:
- "http"
paths:
  "/garage":
    post:
      tags:
      - "Garage"
      summary: "Create a Garage. Associated cars may be mentionned."
      description: ""
      operationId: "createGarage"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "garageDefinition"
        description: "Pet object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Garage"
      responses:
        201:
          description: "Created"
          schema:
            $ref: '#/definitions/GarageWithId'
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
  "/garage/{garage-id}":
    put:
      tags:
      - "Garage"
      summary: "Update Garage detail."
      description: ""
      operationId: "updateGarage"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "garage-id"
        description: "Garage identifier"
        required: true
        type: "string"
      - in: "body"
        name: "garageDefinition"
        description: "Pet object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Garage"
      responses:
        200:
          description: "OK"
          schema:
            $ref: '#/definitions/GarageWithId'
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
    delete:
      tags:
      - "Garage"
      summary: "Delete a garage."
      description: ""
      operationId: "deleteGarage"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "garage-id"
        description: "Garage identifier"
        required: true
        type: "string"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
      - "Garage"
      summary: "Get a garage details."
      description: ""
      operationId: "getGarage"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "garage-id"
        description: "Garage identifier"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: '#/definitions/CarWithId'
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"

definitions:
  Garage:
    type: "object"
    required:
      - "name"
      - "address"
      - "maxCapacity"
    properties:
      name:
        type: "string"
      address:
        type: "string"
      maxCapacity:
        type: "integer"
      cars:
        type: "array"
        items:
          $ref: "#/definitions/Car"

  GarageWithId:
    allOf:
      - $ref: "#/definitions/Garage"
      - properties:
          garage-id:
            type: "string"

  Car:
    type: "object"
    required:
      - "brand"
      - "model"
      - "color"
      - "commisioningDate"
      - "price"
    properties:
      brand:
        type: "string"
      model:
        type: "string"
      color:
        type: "string"
      commisioningDate:
        type: "string"
        format: "date-time"
      price:
        type: "number"

  CarWithId:
    allOf:
      - $ref: "#/definitions/Car"
      - properties:
          car-id:
            type: "string"

  Error:
    type: "object"
    required:
      - "code"
      - "message"
    properties:
      code:
        type: "string"
      message:
        type: "string"
