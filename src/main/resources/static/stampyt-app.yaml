swagger: "2.0"
info:
  description: ""
  version: "1.0.0"
  title: "Swagger stampyt-app"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "loic.dalzotto@hotmail.fr"
basePath: "/api/v1"
tags:
- name: "Car"
  description: "Everything about Car management."
- name: "Garage"
  description: "Everything about Garage management."
schemes:
- "http"
paths:
  "/garage":
    post:
      tags:
      - "Garage"
      summary: "Create a Garage. Associated cars may be mentionned."
      description: ""
      operationId: "createGarage"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "garageDefinition"
        description: "Pet object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Garage"
      responses:
        201:
          description: "Created"
          schema:
            $ref: '#/definitions/GarageInfo'
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
  "/garage/{garage-id}":
    put:
      tags:
      - "Garage"
      summary: "Update Garage detail."
      description: ""
      operationId: "updateGarage"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "garage-id"
        description: "Garage identifier"
        required: true
        type: "string"
      - in: "body"
        name: "garageDefinition"
        description: "Pet object that needs to be added to the store"
        required: true
        schema:
          $ref: '#/definitions/GarageInfo'
      responses:
        200:
          description: "OK"
          schema:
            $ref: '#/definitions/DetailedGarageInfo'
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
    delete:
      tags:
      - "Garage"
      summary: "Delete a garage."
      description: ""
      operationId: "deleteGarage"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "garage-id"
        description: "Garage identifier"
        required: true
        type: "string"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
      - "Garage"
      summary: "Get a garage details."
      description: ""
      operationId: "getGarage"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "garage-id"
        description: "Garage identifier"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: '#/definitions/DetailedGarage'
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
  "/garage/{garage-id}/car-number":
    get:
      tags:
      - "Car"
      summary: "Get garage's number of cars."
      description: ""
      operationId: "getCarNumber"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "garage-id"
        description: "Garage identifier"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: '#/definitions/GarageCarNumber'
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
  "/garage/{garage-id}/car":
    post:
      tags:
      - "Car"
      summary: "Create a car in the associated garage."
      description: ""
      operationId: "createCar"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "garage-id"
        description: "Garage identifier"
        required: true
        type: "string"
      - in: "body"
        name: "carDefinition"
        description: "Pet object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Car"
      responses:
        201:
          description: "Created"
          schema:
            $ref: '#/definitions/DetailedCar'
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
  "/car/{car-id}":
    delete:
      tags:
      - "Car"
      summary: "Delete a single car."
      description: ""
      operationId: "deleteCar"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "car-id"
        description: "Car identifier"
        required: true
        type: "string"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
      - "Car"
      summary: "Get car detail."
      description: ""
      operationId: "getCar"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "car-id"
        description: "Car identifier"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: '#/definitions/DetailedCar'
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
      - "Car"
      summary: "Update car detail."
      description: ""
      operationId: "updateCar"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "car-id"
        description: "Car identifier"
        required: true
        type: "string"
      - in: "body"
        name: "carDefinition"
        description: "Car values to update"
        required: true
        schema:
          $ref: "#/definitions/CarRegistrationNumber"
      responses:
        200:
          description: "OK"
          schema:
            $ref: '#/definitions/CarRegistrationNumberWithId'
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
  "/garage/{garage-id}/car/all":
    get:
      tags:
      - "Car"
      summary: "get all cars associated to the garage."
      description: ""
      operationId: "getAllCars"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "garage-id"
        description: "Garage identifier"
        required: true
        type: "string"
      - in: "query"
        name: "color"
        description: "Car color"
        required: false
        type: "string"
      - in: "query"
        name: "minPrice"
        description: "Minimum price"
        required: false
        type: "number"
      - in: "query"
        name: "maxPrice"
        description: "Maximum price"
        required: false
        type: "number"
      responses:
        200:
          description: "OK"
          schema:
            $ref: '#/definitions/DetailedCars'
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
    delete:
      tags:
      - "Car"
      summary: "Delete all cars associated to the garage."
      description: ""
      operationId: "deleteAllCars"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "garage-id"
        description: "Garage identifier"
        required: true
        type: "string"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
definitions:

  GarageInfo:
    type: "object"
    required:
      - "name"
      - "address"
      - "maxCapacity"
    properties:
      name:
        type: "string"
      address:
        type: "string"
      maxCapacity:
        type: "integer"

  DetailedGarageInfo:
    allOf:
      - properties:
          garageId:
            type: "string"
          creationDate:
            type: "string"
            format: "date-time"
      - $ref: '#/definitions/GarageInfo'


  Garage:
    allOf:
      - $ref: '#/definitions/GarageInfo'
      - properties:
          cars:
            type: "array"
            items:
              $ref: "#/definitions/Car"

  DetailedGarage:
    allOf:
      - properties:
          garageId:
            type: "string"
          creationDate:
            type: "string"
            format: "date-time"
      - $ref: "#/definitions/Garage"
      - $ref: "#/definitions/DetailedCars"

  GarageCarNumber:
    type: "object"
    required:
      - "garageId"
      - "carNumber"
    properties:
      garageId:
        type: "string"
      carNumber:
        type: "integer"

  CarRegistrationNumber:
    type: "object"
    properties:
      registrationNumber:
        type: "string"

  CarRegistrationNumberWithId:
    allOf:
      - properties:
          carId:
            type: "string"
      - $ref: "#/definitions/CarRegistrationNumber"


  Car:
    type: "object"
    required:
      - "registrationNumber"
      - "brand"
      - "model"
      - "color"
      - "commisioningDate"
      - "price"
    properties:
      registrationNumber:
        type: "string"
      brand:
        type: "string"
      model:
        type: "string"
      color:
        type: "string"
      commisioningDate:
        type: "string"
        format: "date-time"
      price:
        type: "number"

  DetailedCar:
    allOf:
      - properties:
          carId:
            type: "string"
          creationDate:
            type: "string"
            format: "date-time"
      - $ref: "#/definitions/Car"

  DetailedCars:
    type: "object"
    properties:
      cars:
        type: "array"
        items:
          $ref: '#/definitions/DetailedCar'

  Error:
    type: "object"
    required:
      - "errorCode"
      - "errorMessage"
    properties:
      errorCode:
        type: "string"
      errorMessage:
        type: "string"