swagger: "2.0"
info:
  description: ""
  version: "1.0.0"
  title: "Swagger stampyt-app"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "loic.dalzotto@hotmail.fr"
basePath: "/api/v1"
tags:
- name: "Garage"
  description: "Everything about Garage management."
- name: "Car"
  description: "Everything about Car management."
schemes:
- "https"
- "http"
paths:
  "/garages":
    post:
      tags:
      - "Garage"
      summary: "Create a Garage. Associated cars may be mentionned."
      description: ""
      operationId: "createGarage"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "garageDefinition"
        description: "Garage object to be created"
        required: true
        schema:
          $ref: "#/definitions/Garage"
      responses:
        201:
          description: "Created"
          schema:
            $ref: '#/definitions/DetailedGarage'
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
  "/garages/{garage-id}":
    put:
      tags:
      - "Garage"
      summary: "Update Garage details informations."
      operationId: "updateGarage"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "garage-id"
        description: "Garage identifier in UUID format"
        required: true
        type: "string"
      - in: "body"
        name: "garageDefinition"
        description: "Garage values to be updated"
        required: true
        schema:
          $ref: '#/definitions/GarageInfo'
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
      - "Garage"
      summary: "Get Garage informations with his cars."
      operationId: "getGarage"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "garage-id"
        description: "Garage identifier in UUID format"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: '#/definitions/DetailedGarage'
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
    delete:
      tags:
      - "Garage"
      summary: "Delete a garage."
      description: ""
      operationId: "deleteGarage"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "garage-id"
        description: "Garage identifier in UUID format"
        required: true
        type: "string"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
  "/garages/{garage-id}/car-number":
    get:
      tags:
      - "Car"
      summary: "Get garage's number of cars."
      description: ""
      operationId: "getCarNumber"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "garage-id"
        description: "Garage identifier in UUID format"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: '#/definitions/GarageCarNumber'
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
  "/garages/{garage-id}/cars":
    post:
      tags:
      - "Car"
      summary: "Create a car in the associated garage."
      description: ""
      operationId: "createCar"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "garage-id"
        description: "Garage identifier in UUID format"
        required: true
        type: "string"
      - in: "body"
        name: "carDefinition"
        description: "Car object to be created"
        required: true
        schema:
          $ref: "#/definitions/Car"
      responses:
        201:
          description: "Created"
          schema:
            $ref: '#/definitions/DetailedCar'
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
  "/cars/{car-id}":
    put:
      tags:
      - "Car"
      summary: "Update car detail."
      description: ""
      operationId: "updateCar"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "car-id"
        description: "Car identifier in UUID format"
        required: true
        type: "string"
      - in: "body"
        name: "carDefinition"
        description: "Car values to update"
        required: true
        schema:
          $ref: "#/definitions/CarRegistrationNumber"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
      - "Car"
      summary: "Get car detail."
      description: ""
      operationId: "getCar"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "car-id"
        description: "Car identifier in UUID format"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: '#/definitions/DetailedCar'
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
    delete:
      tags:
      - "Car"
      summary: "Delete a single car."
      description: ""
      operationId: "deleteCar"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "car-id"
        description: "Car identifier in UUID format"
        required: true
        type: "string"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
  "/garages/{garage-id}/cars/all":
    get:
      tags:
      - "Car"
      summary: "get all cars associated to the garage."
      description: ""
      operationId: "getAllCars"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "garage-id"
        description: "Garage identifier in UUID format"
        required: true
        type: "string"
      - in: "query"
        name: "color"
        description: "Car color"
        required: false
        type: "string"
      - in: "query"
        name: "minPrice"
        description: "Minimum price"
        required: false
        type: "number"
      - in: "query"
        name: "maxPrice"
        description: "Maximum price"
        required: false
        type: "number"
      responses:
        200:
          description: "OK"
          schema:
            $ref: '#/definitions/DetailedCars'
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
    delete:
      tags:
      - "Car"
      summary: "Delete all cars associated to the garage."
      description: ""
      operationId: "deleteAllCars"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "garage-id"
        description: "Garage identifier in UUID format"
        required: true
        type: "string"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"

definitions:

  GarageInfo:
    description: "Inherent informations of Garage."
    type: "object"
    properties:
      name:
        description: "The name of the garage."
        type: "string"
      address:
        description: "The address of the garage."
        type: "string"
      maxCapacity:
        description: "The max capacity of car. Cannot be <= 0."
        type: "integer"

  Garage:
    description: "Inherent Garage informations with his cars."
    allOf:
      - $ref: '#/definitions/GarageInfo'
      - properties:
          cars:
            type: "array"
            items:
              $ref: "#/definitions/Car"

  DetailedGarage:
    description: "Technical garage informations with cars."
    allOf:
      - required:
        - "garageId"
        - "creationDate"
      - properties:
          garageId:
            description: "The garage id in UUID format."
            type: "string"
          creationDate:
            description: "Generation date of car. ISO-8601 format : YYYY-MM-ddTHH:mm:ss.SSSZ"
            type: "string"
            format: "date-time"
      - $ref: "#/definitions/Garage"
      - $ref: "#/definitions/DetailedCars"

  GarageCarNumber:
    type: "object"
    description: "Garage car number informations."
    required:
      - "garageId"
      - "carNumber"
    properties:
      garageId:
        description: "The garage id in UUID format."
        type: "string"
      carNumber:
        description: "The number of cars."
        type: "integer"

  CarRegistrationNumber:
    description: "The registration number of a car."
    type: "object"
    properties:
      registrationNumber:
        description: "The registration number of the car."
        type: "string"

  Car:
    description: "Inherent car informations."
    type: "object"
    properties:
      registrationNumber:
        description: "The registration number of the car."
        type: "string"
      brand:
        description: "The brand of the car."
        type: "string"
      model:
        description: "The model of the car."
        type: "string"
      color:
        description: "The color of the car."
        type: "string"
      commisioningDate:
        type: "string"
        description: "Date of commercialization of the car. ISO-8601 format : YYYY-MM-ddTHH:mm:ss.SSSZ"
        format: "date-time"
      price:
        description: "The value of the car. Decimal number format : XX.XX"
        type: "number"

  DetailedCar:
    description: "Inherent car informations with id."
    allOf:
      - required:
        - "carId"
      - properties:
          carId:
            description: "An id in UUID format."
            type: "string"
      - $ref: "#/definitions/Car"

  DetailedCars:
    type: "object"
    properties:
      cars:
        type: "array"
        description: "A simple list of car."
        items:
          $ref: '#/definitions/DetailedCar'

  Error:
    type: "object"
    required:
      - "errorCode"
      - "errorMessage"
    properties:
      errorCode:
        type: "string"
      errorMessage:
        type: "string"